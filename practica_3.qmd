---
title: "Practica 3"
format: revealjs
author: "Marcos Gibert y Javi Torres"
editor: visual
---

## Presentación

El dataset Boston Housing Dataset es un conjunto de datos sobre la ciudad de Boston en relación a las viviendas. Fue realizado por el censo de 1970 y consta de 506 observaciones con 14 variables:

2.  **ZN (Proporción de tierras residenciales para lotes de más de 25,000 pies cuadrados):** Indica la proporción de terreno residencial dividido en lotes de más de 25,000 pies cuadrados.

3.  **INDUS (Proporción de acres de negocios no minoristas por ciudad):** Mide la proporción de tierra utilizada para negocios no minoristas.

4.  **CHAS (Variable ficticia de Charles River):** Es una variable binaria que indica si una vivienda limita con el río Charles (1 si es cierto, 0 si no).

5.  **NOX (Concentración de óxidos nítricos):** Representa la concentración de óxidos nítricos (en partes por 10 millones).

6.  **RM (Número medio de habitaciones por vivienda):** Indica el promedio de habitaciones por vivienda en el vecindario.

7.  **AGE (Proporción de unidades ocupadas por sus propietarios construidas antes de 1940):** Mide la proporción de unidades ocupadas por sus propietarios construidas antes de 1940.

8.  **DIS (Distancias ponderadas a cinco centros de empleo de Boston):** Representa distancias ponderadas a centros de empleo en Boston.

9.  **RAD (Índice de accesibilidad a carreteras radiales):** Mide la accesibilidad a carreteras radiales principales..

10. **TAX (Tasa de impuesto a la propiedad de valor total por \$10,000):** Indica la tasa de impuesto a la propiedad.

11. **PTRATIO (Proporción alumno-maestro):** Mide la proporción de alumnos por maestro en las escuelas del vecindario.

12. **B (1000(Bk - 0.63)\^2), donde Bk es la proporción de personas de raza negra por ciudad:** Este término está relacionado con la proporción de personas de raza negra en la ciudad y se ha transformado para resaltar las áreas con alta proporción de personas de raza negra.

13. **LSTAT (Porcentaje de la población de bajos ingresos):** Representa el porcentaje de la población con bajos ingresos.

14. **MEDV (Valor medio de las viviendas ocupadas por sus propietarios en \$1000):** Es la variable objetivo que queremos predecir, el valor medio de las viviendas.

Todas las variables son cuantitativas excepto **CHAS (Variable ficticia de Charles River)** que es cualitativa nominal y **RAD (Índice de accesibilidad a carreteras radiales)** que es ordinal.

Nuestro objetivo será determinar las relaciones entre las características de un área determinada y el valor precio de la vivienda en dicha área.

## Database

Podemos encontrar el dataset en el paquete MASS

```{r}
library(MASS)
library(ggplot2)
library(tidyverse)
df <- as.data.frame(Boston)

```

Veamos la estructura de los datos:

```{r}
head(df,10)

```

El dataset que tenemos ya lo encontramos de forma tidy. Sin embargo, observamos en los siguientes gráficos que tiene muchos outliers. Por tanto para conseguir los valores estadísticos típicos vamos a eliminar estos outliers.

```{r}

# Choose six variables (excluding CHAS and RAD)
selected_vars <- c("dis", "tax", "ptratio", "black", "lstat", "medv")
df_subset <- df[, selected_vars]

# Set up a larger plotting area with smaller margins
par(mfrow = c(2, 3), mar = c(2, 2, 1, 1))  # Adjust the margin as needed

# Create boxplots for each selected variable
for (col in names(df_subset)) {
  boxplot(df_subset[, col], main = col, col = "lightblue", border = "black", notch = TRUE)
}

# Reset the plotting area
par(mfrow = c(1, 1), mar = c(5, 4, 4, 2))


```

```{r}
selected_vars <- c("crim", "zn", "indus", "nox", "rm", "age")
df_subset <- df[, selected_vars]

# Set up a larger plotting area with smaller margins
par(mfrow = c(2, 3), mar = c(2, 2, 1, 1))  # Adjust the margin as needed

# Create boxplots for each selected variable
for (col in names(df_subset)) {
  boxplot(df_subset[, col], main = col, col = "lightblue", border = "black", notch = TRUE)
}

# Reset the plotting area
par(mfrow = c(1, 1), mar = c(5, 4, 4, 2))

```

## Análisis

```{r}
df$chas <- ifelse(df$chas == 1, 'yes', 'no')


```

```{r}
ggplot(df, aes(x = rad)) +
  geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black", alpha = 0.7) +
  geom_density(alpha = 0.5, fill = "orange") +
  labs(title = "Distribución de la variable rad",
       x = "Valor de rad",
       y = "Densidad") +
  theme_minimal()
```

```{r}
df <-df %>%
  mutate(rad = case_when(
    rad < 4 ~ 'bajo',
    rad >= 4 & rad < 6 ~ 'medio',
    rad >= 6 ~ 'alto'),
  .keep='all', .after=dis
  )

head(df)
```

```{r}
df_numeric=df
df_numeric[,4] <- NULL
df_numeric[,8] <- NULL


library(corrplot)
cor_matrix <- cor(df_numeric)
corrplot(cor_matrix, method = "color")
print(cor_matrix)
```

```{r}
River_bound <- ggplot(data = df, aes(x = chas, y = medv)) +
  geom_boxplot(aes(color = chas), width = 0.3, show.legend = FALSE) +
  geom_jitter(aes(color = chas), alpha = 0.5, show.legend = FALSE, position = position_jitter(width = 0.2, seed = 0)) +
  scale_color_manual(values = c("darkorange","purple")) +
  labs(x = "Borde con el río",
       y = "precio medio")

River_bound
```

```{r}
Road_acces <- ggplot(data = df, aes(x = rad, y = medv)) +
  geom_boxplot(aes(color = rad), width = 0.3, show.legend = FALSE) +
  geom_jitter(aes(color = rad), alpha = 0.5, show.legend = FALSE, position = position_jitter(width = 0.2, seed = 0)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "accesibilidad a carreteras radiales",
       y = "precio medio")

Road_acces
mean(df,subset())
```

```{r}
library(GGally)
df_subset=df

df_subset <- df_subset %>% 
  select(c(6,11,13,14))
  


ggpairs(df_subset)

```

```{r}
library(tidyverse)
library(MVA)

a2<- df %>%
  select(medv,lstat) %>%
  na.omit %>% as.matrix()

bvbox(a2,xlab = "Precio medio", 
           ylab = "estatus social",
      pch = 19, cex = 1.25, col = "red")
```

```{r}
ggplot(df) +
  geom_point(mapping = aes(x = lstat,
                           y = medv,
                           color = chas), size=3)+ theme_bw() +
  theme(axis.text = element_text(size=20),
        axis.title = element_text(size=20, face = "bold"),
        legend.title = element_text(size=20)) + 
  guides(fill = guide_legend(title = "borde con río"))
```

```{r}
River_bound <- ggplot(data = df, aes(x = chas, y = nox)) +
  geom_boxplot(aes(color = chas), width = 0.3, show.legend = FALSE) +
  geom_jitter(aes(color = chas), alpha = 0.5, show.legend = FALSE, position = position_jitter(width = 0.2, seed = 0)) +
  scale_color_manual(values = c("darkorange","purple")) +
  labs(x = "Borde con el río",
       y = "precio medio")

River_bound

```

```{r}
Road_acces <- ggplot(data = df, aes(x = rad, y = nox)) +
  geom_boxplot(aes(color = rad), width = 0.3, show.legend = FALSE) +
  geom_jitter(aes(color = rad), alpha = 0.5, show.legend = FALSE, position = position_jitter(width = 0.2, seed = 0)) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "accesibilidad a carreteras radiales",
       y = "precio medio")

Road_acces
```
